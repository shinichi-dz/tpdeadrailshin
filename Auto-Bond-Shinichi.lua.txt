--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,w)local w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=107,42,98,96,89,13,61,99,54,47,76,40,72,66,28,48,37,30,22,25,21,82,14,59,72,43,14,29,76,79,72,77,79,95,85,93,43,27,14,10,32,68,66,55,62,46,40,94,31,41,96,86,50 while w~=72 do if x>=725 then if x<=1081 then if x>=905 then if x>=1025 then if x>=1062 then if x<1072 then ch=function()local cl,cm,cn,co co,cl,cn,cm=bx(by,y,(y+3))y=(y+4);return((cm*16777216)+(cn*65536)+(cl*256)+co);end x=1081 else do bl=function()local cl cl=bx(by,y,y)y=(y+1);return cl;end end x=1104 end else y=1 x=1062 end else if x>=930 then if x>938 then bi=function(cl,cm,cn,co,co,co,co)local co co=((cl/2^(cm-1))%2^((cn-1)-(cm-1)+1))return(co-co%1);end x=1025 else cc=(bit_lib and bit_lib.bxor or function(cl,cm)cl=cl%(2^32)cm=cm%(2^32)local cn,co=0,1 while cl>0 and cm>0 do local cp,cq=cl%16,cm%16 cn=cn+br[cp+1][cq+1]*co cl=(cl-cp)/16 cm=(cm-cq)/16 co=co*16 end cn=cn+cl*co+cm*co return cn end)x=976 end else bz=function(cl,cm,cn,co,co)local co,cp,cq=59,59,96,40,61,96,61,52,67,60,69,20,40,20,63,89 while co~=26 do if cp<=112 then if cp>=76 then if cp>82 then do cq=((cm/bj[cl])%bj[cn])end cp=138 else cp=112 cq=nil end else cp=76 cq=nil end else if cp<=138 then cq=(cq-cq%1)cp=153 else if cp>156 then co=26;else cp=193 do return cq end end end end end end x=930 end end else if x<=743 then if x<735 then bo=''x=743 else x=787 bw=(2^52)end else if x>=828 then if x<873 then cj=2 x=875 else x=905 for cl=1,31 do bj[cl]=cj cj=(cj*2)end end else bj={[s]=1}x=828 end end end else if x<=1197 then if x>=1147 then if x>=1167 then if x>1171 then bh={}x=1212 else x=1197 cb=function(...)return{...},ck('#',...)end end else x=1167 do ca=function(s,s,s)local s,cl,cm,cn=78,38,63,16,12,78,58,24,82,73,28,56,43 while s~=29 do if cl>=116 then if cl>=152 then if cl<181 then cl=190 return cn;else s=29;end else do y=(y+cm);end cl=152 end else if cl<=38 then cl=55 cm,cn=nil else if cl>59 then cn=by:sub(y,(y+cm-1))cl=116 else cl=92 cm=ch()end end end end end end end else if x<1123 then bp=function()local s,cl cl,s=bx(by,y,(y+2))y=(y+2);return((s*256)+cl);end x=1126 else x=1147 be=function()local s,cl,cm,cn,co,cp,cq,cr=75,45,72,28,38,83,15,86,28,99,41,73,36,44,84,31,42,19 while s~=37 do if cl<=150 then if cl>=88 then if cl>=125 then if cl<144 then cl=150 if((cn==0 and cm==0))then do return 0 end end else cl=180 cp=((-1)^bz(31,cm,1))end else cm=ch()cl=125 end else if cl<60 then cm,cn,co,cp,cq,cr=nil cl=63 else cl=88 cn=ch()end end else if cl>=282 then if cl>=331 then if cl>335 then s=37;else cl=363 return(cp*(2^(cr-1023))*(co/bw+cq))end else cl=331 do if 0==cr then if not(co==f)then cr=1 cq=0 else return(cp*0)end elseif not(cr==2047)then else if not(co~=0)then do return(cp*(0/0))end else do return(cp*(1/0))end end end end end else if cl>=221 then if cl<239 then cl=245 co=(bz(0,cm,20)*4294967296+cn)else cq=1 cl=282 end else cr=bz(20,cm,11)cl=221 end end end end end end end else if x<=1286 then if x>=1244 then if x<1279 then bv={}x=1286 else bg={}x=1320 end else x=1244 bk=function(f,s,s,s)local s,cl,cm,cn,co,cp,cq,cr=79,55,42,85,33,18,12,24,84,95,85,65,13,98,35,45,57,84,95,76,30,82,56,62 while s~=41 do if cl<=300 then if cl>=200 then if cl<=244 then if cl<241 then cr=ch()cl=244 else for cs=(#bh+1),(#bh+cr)do local ct,cu,cv,cw,cx=92,72,74,68,56,73,58,14,21,31,97,97,83,41,64,88,48,41,14,13,15,32 while ct~=44 do if cu>=327 then if cu<=443 then if cu<=364 then if cu>332 then cu=410 do cw[59]=bi(cx,12,20);end else cu=364 cw[156]=bi(cx,3,11);end else if cu>412 then do cw[30]=bi(cv,12,33);end cu=484 else cw[117]=bi(cx,21,c);cu=443 end end else if cu>=562 then if cu>568 then break else cu=587 bh[cs]=cw;end else if cu<512 then cw[190]=-cw[t]cu=519 else cw[171]=-cw[117]cu=562 end end end else if cu>=191 then if cu>=254 then if cu<280 then cu=288 cw[29]=bi(cx,1,2);else cu=327 cw[46]=bi(cv,1,11);end else if cu<232 then cu=234 cv=ch()else cw[14]=bl();cu=254 end end else if cu>=123 then if cu>127 then cu=191 do cx=ch()end else cu=157 cw[121]=bl();end else if cu<81 then cu=88 cv,cw,cx=nil else cu=123 do cw={}end end end end end end end cl=270 end else if cl>276 then cl=325 cn={}else cm=ch()cl=300 end end else if cl>=134 then if cl>138 then cl=200 co={}else cp={}cl=172 end else if cl<94 then cl=100 cm,cn,co,cp,cq,cr=nil else cq={}cl=134 end end end else if cl>=478 then if cl<=504 then if cl<501 then cl=504 for c=1,ch()do cp[c-1]=bk();end else cl=537 co[47]=cp;end else if cl>=556 then if cl<593 then cl=595 return co;else s=41;end else cl=556 co[q]=bl();end end else if cl<=345 then if cl>334 then co[38]=cn cl=389 else for c=1,cm do local q,s,t,cm=79,42,11,35,23,96,62,22,99,30,64,53,78 while q~=43 do if s>=172 then if s>=203 then if s>211 then q=43;else s=250 cn[c]=cm;end else s=203 if(not(t~=1))then cm=(0~=bl());elseif(2==t)then do cm=be();end elseif(not(t~=4))then cm=ca();elseif(0==t)then cm=f[ca()];end;end else if s<=42 then s=90 t,cm=nil else if s>99 then s=172 cm=nil else s=125 t=bl()end end end end end cl=345 end else if cl<436 then cl=438 for c=1,ch()do local f,q,s,t,cm,cn=81,64,45,10,14,67,52,91,60,48,26,86,48,30,69,61,72,82,72,87,43,53,50,17,78 while f~=50 do if q>=304 then if q<=402 then if q<=329 then if q<325 then q=329 t[46]=bi(cn,1,11);else q=372 t[156]=bi(s,3,11);end else if q>381 then t[117]=bi(s,21,29);q=428 else t[30]=bi(cn,12,33);q=402 end end else if q>=507 then if q>=539 then if q<571 then q=573 cq[c]=t;else f=50;end else do t[171]=-t[117]end q=539 end else if q>433 then q=507 t[190]=-t[156]else t[14]=bi(s,12,20);q=477 end end end else if q<=141 then if q>=103 then if q<138 then q=141 t[121]=bl();else t[149]={};q=172 end else if q<79 then s,t,cm,cn=nil q=83 else t={{},nil,nil}q=103 end end else if q>=211 then if q>=245 then if q>253 then t[29]=cm q=304 else q=275 do cm=bi(s,1,2)end end else q=245 cn=ch()end else if q>177 then s=ch()q=211 else q=194 if not(bl()~=1)then for c=1,bl()do t[149][c]={bl()==0,ch()}end end end end end end end end else cl=478 co[182]=cq;end end end end end end end else if x<=1320 then x=1357 bd=function(c,f,q,s)local s,t,cl,cm,cn cm=c[38]do cl=bv end cn=c[43]t=c[182]s=c[47]return function(...)local c,cl,co,cp,cq,cr,cs,ct,cu cq=1 cl=-1 do c=-1 end cp={}co={...}cu=(ck('#',...)-1)do cr={}end ct={}for c=0,cu do if(not(c<cn))then cp[(c-cn)]=co[(c+1)];else ct[c]=co[(c+1)];end;end;cs=(cu-cn+1)while true do local c,cn,co,cp,cs,cu,cv,cw,cx,cy co=t[cq]do cn=co[46]end do cy=co[121]end c=co[156]cv=co[59]cu=co[117]cw=co[14]cp=co[190]cx=co[30]cs=co[171]if not(co[46]<27)then if not(co[46]<40)then if not(cn>46)then do if not(cn<43)then do if not(cn>44)then do if 43==cn then do ct[c]=(ct[cx]+ct[cu]);end else local t,cp,cs cp=s[cx]t=nil do cs={}end do t=cg({},{__index=function(cv,cv)local cv=cs[cv];return cv[1][cv[2]];end,__newindex=function(cv,cv,cw)local cv=cs[cv]cv[1][cv[2]]=cw;end;});end for cv=1,cu do local cw cw=co[149][cv]if cw[1]then cs[(cv-1)]={ct,cw[2],nil};else cs[(cv-1)]={f,cw[2],nil};end;cr[(#cr+1)]=cs;end;ct[c]=bd(cp,t,q);end end else if(cn<46)then local t,cp,cs do cs=co[156]end t=ct[cs]cp=ct[(cs+2)]if((cp>0))then if((t>ct[cs+1]))then cq=cx;else ct[(cs+3)]=t;end elseif((t<ct[cs+1]))then cq=cx;else ct[(cs+3)]=t;end else if ct[c]then cq=co[30];end;end end end else do if not(co[46]<41)then if(cn<42)then f[cx]=ct[c];else ct[c][cm[cx]]=cm[cu];end else local t,cp cp=c t=ct[cx]ct[(cp+1)]=t;do ct[cp]=t[cm[cu]];end end end end end else do if not(cn>49)then if not(cn<48)then if(cn<49)then do if((ct[co[156]]<ct[cu]))then cq=co[r];end;end else local r,t,cp,cs cs=c t,cp=cb(ct[cs](ci(ct,(cs+1),cx)))cl=(cp+cs-1)r=0 for cp=cs,cl do do r=(r+1);end ct[cp]=t[r];end;end else do ct[co[156]]=(ct[co[30]]%cm[cu]);end end else if not(cn>51)then if 50==cn then ct[c]=(ct[cx]/cm[co[117]]);else do ct[c]=ct[cx][cm[cu]];end end else do if not(co[46]~=52)then local r,t,cp,cs,cv r=co[156]cp=cu cv=(r+2)do t={ct[r](ct[r+1],ct[cv])}end for cw=1,cp do ct[(cv+cw)]=t[cw]end cs=ct[(r+3)]if cs then do ct[cv]=cs end else cq=cx;end;else ct[c]=nil;end end end end end end else if not(cn>32)then if not(cn<30)then if not(cn<31)then if(cn<32)then local r r=c ct[r](ci(ct,(r+1),cx))else ct[c]=ct[cx];end else do if(not(ct[c]==ct[cu]))then cq=cx;end;end end else if not(cn<28)then if(cn>28)then ct[c]={};else local r,t,cp t=c cp={ct[t](ct[t+u])}r=0 for u=t,cu do do r=(r+1);end do ct[u]=cp[r];end end end else ct[co[156]]=(ct[cx]*cm[cu]);end end else if not(cn<36)then if not(cn<38)then if(co[46]>38)then while(ct[c]==ct[cu])do cq=co[30];break end else cq=cx;end else if(co[46]>36)then local r r=c ct[r](ci(ct,(r+1),cl))else ct[c]=(ct[co[30]]+cm[co[117]]);end end else if not(cn>33)then if(not(ct[c]==cm[cu]))then cq=cx;end;else if(cn>34)then do ct[c]();end else local r,t,u r=c t={ct[r](ci(ct,r+1,cl))}u=0 for cp=r,cu do u=(u+m);ct[cp]=t[u];end end end end end end else if not(cn>12)then if not(cn<6)then do if not(cn>8)then if not(cn>6)then ct[c][ct[cx]]=ct[cu];else do if 7==cn then local m m=c do ct[m]=ct[m](ci(ct,m+1,cx));end else local m,r,t,u t=c r,m=cb(ct[t](ct[(t+1)]))cl=(m+t-1)u=0 for m=t,cl do u=(u+1);ct[m]=r[u];end;end end end else if not(cn>10)then if(cn>9)then local m m=c ct[m]=ct[m](ci(ct,m+1,cl));else do return ct[c]end end else if(cn>11)then ct[c]=bd(s[cx],nil,q);elseif(not(ct[co[156]]~=cm[cu]))then cq=co[30];end end end end else if not(cn>2)then if not(cn<1)then if(cn<2)then local m,r m=co[30]r=ct[m]do for s=(m+1),cu do r=(r..ct[s]);end;end ct[co[156]]=r;else do ct[c][cm[co[30]]]=ct[co[117]];end end else local m,r,s,t t=co[156]s=((cu-1)*50)r=ct[t]do m=(cl-t)end for u=1,m do r[(s+u)]=ct[(t+u)]end;end else if not(cn>3)then cm=bv[c](cm)else do if(co[46]>d)then do ct[c]=(ct[cx]-ct[cu]);end else local d d={}while#cr>0 do for m=1,#cr do local m=cr[m]for r=0,#m do local m=m[r]local r=m[1]local s=m[2]if r==ct and s>=0 then d[s]=r[s]m[1]=d end end end break end return co[co[117]],ct[(c+2)];end end end end end else if not(co[46]>19)then if not(cn<16)then do if not(cn>17)then if(co[46]>16)then if not ct[c]then cq=co[30];end;else ct[c]=f[cx];end else if(cn>18)then local d d=c ct[d](ct[(d+1)])else ct[c]=(not(cx==0));end end end else if not(cn>13)then ct[c]=q[cm[cx]];else if 14==cn then do if((cm[co[156]]<ct[cu]))then cq=cx;end;end else local d,f,m m=co[156]f=ct[m]d=(cl-m)do for q=1,d do f[q]=ct[(m+q)]end;end end end end else if not(cn>22)then do if not(co[46]<21)then if not(cn~=21)then local d d=c ct[d]=ct[d](ct[d+k]);else local d,f,k do d=c end f=ct[(d+2)]k=(ct[d]+f)do ct[d]=k;end if((f>0))then if(not(k>ct[d+1]))then cq=co[30];ct[(d+3)]=k;end elseif(not(k<ct[d+1]))then cq=cx;ct[(d+3)]=k;end end else if((ct[c]<cm[cu]))then cq=cx;end;end end else if not(cn>24)then if(cn>23)then ct[c]=ct[cx][ct[cu]];else do ct[c]=cm[cx]end end else if(cn>25)then ct[co[156]]=#ct[cx];else local d do d=c end ct[d]=ct[d]();end end end end end end do cq=(cq+1);end end;end;end else if x<1398 then x=1400 return bd(bk(bq()),{},bq())();else w=72;end end end end end else if x<=344 then if x<=183 then if x>=94 then if x>=142 then if x<181 then x=183 bs=string.sub else bt=string.gsub x=203 end else ba=string.char x=142 end else if x<65 then y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=nil x=71 else do bx=string.byte end x=94 end end else if x>=297 then if x>=315 then if x>318 then cg=setmetatable x=376 else x=344 bq=(getfenv or function()return _ENV end)end else bb=math.ldexp x=315 end else if x<=203 then z=string.rep x=238 else if x<271 then bu=table.concat x=280 else bf=table.insert x=297 end end end end else if x>=497 then if x>=604 then if x<=604 then x=653 for c=0,255 do do bn[c]=ba(c);end end else if x>658 then x=725 do br={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,j,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,p,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,o,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{i,9,10,11,12,13,14,15,0,1,2,3,4,5,6,b,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,g,5,},{11,10,9,8,15,14,13,12,3,v,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,e,h,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,l,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end else do by=bt(a,'..',function(a,b,b,b)return bn[cd(a,n)]end)end x=678 end end else if x>=529 then if x<555 then cd=tonumber x=558 else bn={}x=604 end else ci=(unpack or table.unpack)x=529 end end else if x>=422 then if x>=447 then if x<461 then x=469 bc=math.abs else bm=math.floor x=497 end else do ce=(function(a,b,b)if not(cf(a)~='number')then return true else return false end end)end x=447 end else if x<389 then x=396 ck=select else do cf=type end x=422 end end end end end end end
